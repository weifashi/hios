basePath: /api/v1
definitions:
  interfaces.Response:
    properties:
      code:
        description: 状态, [200=成功, 400=失败, 401=未登录, 403=无相关权限, 404=请求接口不存在, 405=请求方法不允许,
          500=系统错误]
        type: integer
      data:
        description: 数据
      msg:
        description: 信息
        type: string
    type: object
  interfaces.SeedReq:
    properties:
      after:
        description: 执行后执行的内容
        type: string
      before:
        description: 执行前先执行的内容
        type: string
      force:
        description: 是否强制发送（默认5秒内不能发送重覆指令）
        type: boolean
      msg:
        description: 消息内容
        type: string
      path:
        description: 执行文件路径
        type: string
      source:
        description: 类型
        type: string
      type:
        description: 类型
        type: string
      uid:
        description: rid
        type: string
    required:
    - msg
    - uid
    type: object
host: http://localhost
info:
  contact: {}
  description: hios是一款轻量级的开源在线项目文件管理工具，提供各类文档协作工具。
  license:
    name: AGPL-3.0 license
    url: http://www.gnu.org/licenses/
  termsOfService: https://file.weifashi.cn/
  title: hios
  version: "1.0"
paths:
  /api/v1/client:
    get:
      consumes:
      - application/json
      description: 获取客户端列表
      parameters:
      - description: 来源 all
        in: query
        name: source
        type: string
      - description: 是否在线 all,1,0
        in: query
        name: online
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/interfaces.Response'
      summary: 获取客户端列表
      tags:
      - System
  /api/v1/node/url:
    get:
      consumes:
      - application/json
      description: 获取连接url
      parameters:
      - description: 类型 node,user
        in: query
        name: type
        type: string
      - description: uid
        in: query
        name: uid
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/interfaces.Response'
      summary: 获取url
      tags:
      - System
  /api/v1/seed:
    post:
      consumes:
      - application/json
      description: 发送消息
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/interfaces.SeedReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/interfaces.Response'
      summary: 发送消息
      tags:
      - System
  /api/v1/ws:
    get:
      consumes:
      - application/json
      description: 请使用ws连接
      parameters:
      - in: query
        name: language
        type: string
      - in: query
        name: token
        type: string
      - in: query
        name: type
        type: string
      responses: {}
      summary: Websocket ws
      tags:
      - Websocket
swagger: "2.0"
